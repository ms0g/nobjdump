#include "opcodeTable.h"

#define IMM(OPCODE) OPCODE " #${}"
#define ABS(OPCODE) OPCODE " ${}"
#define ACC(OPCODE) OPCODE " A"
#define ZP(OPCODE) ABS(OPCODE)
#define REL(OPCODE) ABS(OPCODE)
#define X_IN_ABS(OPCODE) OPCODE " ${},X"
#define Y_IN_ABS(OPCODE) OPCODE " ${},Y"
#define X_IN_ZP(OPCODE) X_IN_ABS(OPCODE)
#define Y_IN_ZP(OPCODE) Y_IN_ABS(OPCODE)
#define X_IN_ZP_IND(OPCODE) OPCODE " (${},X)"
#define ZP_IND_Y_IN(OPCODE) OPCODE " (${}),Y"

OpcodeTable::OpcodeTable() {
    mOpcodeToMnemonicList = {
            {0x00, Mnemonic{"BRK", AddressingMode::IMP}},
            {0x18, Mnemonic{"CLC", AddressingMode::IMP}},
            {0xD8, Mnemonic{"CLD", AddressingMode::IMP}},
            {0x58, Mnemonic{"CLI", AddressingMode::IMP}},
            {0xB8, Mnemonic{"CLV", AddressingMode::IMP}},
            {0xCA, Mnemonic{"DEX", AddressingMode::IMP}},
            {0x88, Mnemonic{"DEY", AddressingMode::IMP}},
            {0xE8, Mnemonic{"INX", AddressingMode::IMP}},
            {0xC8, Mnemonic{"INY", AddressingMode::IMP}},
            {0xEA, Mnemonic{"NOP", AddressingMode::IMP}},
            {0x48, Mnemonic{"PHA", AddressingMode::IMP}},
            {0x08, Mnemonic{"PHP", AddressingMode::IMP}},
            {0x68, Mnemonic{"PLA", AddressingMode::IMP}},
            {0x28, Mnemonic{"PLP", AddressingMode::IMP}},
            {0x40, Mnemonic{"RTI", AddressingMode::IMP}},
            {0x60, Mnemonic{"RTS", AddressingMode::IMP}},
            {0x38, Mnemonic{"SEC", AddressingMode::IMP}},
            {0xF8, Mnemonic{"SED", AddressingMode::IMP}},
            {0x78, Mnemonic{"SEI", AddressingMode::IMP}},
            {0xAA, Mnemonic{"TAX", AddressingMode::IMP}},
            {0xA8, Mnemonic{"TAY", AddressingMode::IMP}},
            {0xBA, Mnemonic{"TSX", AddressingMode::IMP}},
            {0x8A, Mnemonic{"TXA", AddressingMode::IMP}},
            {0x9A, Mnemonic{"TXS", AddressingMode::IMP}},
            {0x98, Mnemonic{"TYA", AddressingMode::IMP}},
            {0xA9, Mnemonic{IMM("LDA"), AddressingMode::IMM, 1}},
            {0xAD, Mnemonic{ABS("LDA"), AddressingMode::ABS, 2}},
            {0xBD, Mnemonic{X_IN_ABS("LDA"), AddressingMode::X_IN_ABS, 2}},
            {0xB9, Mnemonic{Y_IN_ABS("LDA"), AddressingMode::Y_IN_ABS, 2}},
            {0xA5, Mnemonic{ZP("LDA"), AddressingMode::ZP, 1}},
            {0xB5, Mnemonic{X_IN_ZP("LDA"), AddressingMode::X_IN_ZP, 1}},
            {0xA1, Mnemonic{X_IN_ZP_IND("LDA"), AddressingMode::X_IN_ZP_IND, 1}},
            {0xB1, Mnemonic{ZP_IND_Y_IN("LDA"), AddressingMode::ZP_IND_Y_IN, 1}},
            {0xA2, Mnemonic{IMM("LDX"), AddressingMode::IMM, 1}},
            {0xAE, Mnemonic{ABS("LDX"), AddressingMode::ABS, 2}},
            {0xBE, Mnemonic{Y_IN_ABS("LDX"), AddressingMode::Y_IN_ABS, 2}},
            {0xA6, Mnemonic{ZP("LDX"), AddressingMode::ZP, 1}},
            {0xB6, Mnemonic{Y_IN_ZP("LDX"), AddressingMode::Y_IN_ZP, 1}},
            {0xA0, Mnemonic{IMM("LDY"), AddressingMode::IMM, 1}},
            {0xAC, Mnemonic{ABS("LDY"), AddressingMode::ABS, 2}},
            {0xBC, Mnemonic{X_IN_ABS("LDY"), AddressingMode::X_IN_ABS, 2}},
            {0xA4, Mnemonic{ZP("LDY"), AddressingMode::ZP, 1}},
            {0xB4, Mnemonic{X_IN_ZP("LDY"), AddressingMode::X_IN_ZP, 1}},
            {0x8D, Mnemonic{ABS("STA"), AddressingMode::ABS, 2}},
            {0x9D, Mnemonic{X_IN_ABS("STA"), AddressingMode::X_IN_ABS, 2}},
            {0x99, Mnemonic{Y_IN_ABS("STA"), AddressingMode::Y_IN_ABS, 2}},
            {0x85, Mnemonic{ZP("STA"), AddressingMode::ZP, 1}},
            {0x95, Mnemonic{X_IN_ZP("STA"), AddressingMode::X_IN_ZP, 1}},
            {0x81, Mnemonic{X_IN_ZP_IND("STA"), AddressingMode::X_IN_ZP_IND, 1}},
            {0x91, Mnemonic{ZP_IND_Y_IN("STA"), AddressingMode::ZP_IND_Y_IN, 1}},
            {0x8E, Mnemonic{ABS("STX"), AddressingMode::ABS, 2}},
            {0x86, Mnemonic{ZP("STX"), AddressingMode::ZP, 1}},
            {0x96, Mnemonic{Y_IN_ZP("STX"), AddressingMode::Y_IN_ZP, 1}},
            {0x8C, Mnemonic{ABS("STY"), AddressingMode::ABS, 2}},
            {0x84, Mnemonic{ZP("STY"), AddressingMode::ZP, 1}},
            {0x94, Mnemonic{X_IN_ZP("STY"), AddressingMode::X_IN_ZP, 1}},
            {0x0A, Mnemonic{ACC("ASL"), AddressingMode::ACC}},
            {0x0E, Mnemonic{ABS("ASL"), AddressingMode::ABS, 2}},
            {0x1E, Mnemonic{X_IN_ABS("ASL"), AddressingMode::X_IN_ABS, 2}},
            {0x06, Mnemonic{ZP("ASL"), AddressingMode::ZP, 1}},
            {0x16, Mnemonic{X_IN_ZP("ASL"), AddressingMode::X_IN_ZP, 1}},
            {0x4A, Mnemonic{ACC("LSR"), AddressingMode::ACC}},
            {0x4E, Mnemonic{ABS("LSR"), AddressingMode::ABS, 2}},
            {0x5E, Mnemonic{X_IN_ABS("LSR"), AddressingMode::X_IN_ABS, 2}},
            {0x46, Mnemonic{ZP("LSR"), AddressingMode::ZP, 1}},
            {0x56, Mnemonic{X_IN_ZP("LSR"), AddressingMode::X_IN_ZP, 1}},
            {0x2A, Mnemonic{ACC("ROL"), AddressingMode::ACC}},
            {0x2E, Mnemonic{ABS("ROL"), AddressingMode::ABS, 2}},
            {0x3E, Mnemonic{X_IN_ABS("ROL"), AddressingMode::X_IN_ABS, 2}},
            {0x26, Mnemonic{ZP("ROL"), AddressingMode::ZP, 1}},
            {0x36, Mnemonic{X_IN_ZP("ROL"), AddressingMode::X_IN_ZP, 1}},
            {0x6A, Mnemonic{ACC("ROR"), AddressingMode::ACC}},
            {0x6E, Mnemonic{ABS("ROR"), AddressingMode::ABS, 2}},
            {0x7E, Mnemonic{X_IN_ABS("ROR"), AddressingMode::X_IN_ABS, 2}},
            {0x66, Mnemonic{ZP("ROR"), AddressingMode::ZP, 1}},
            {0x76, Mnemonic{X_IN_ZP("ROR"), AddressingMode::X_IN_ZP, 1}},
            {0x29, Mnemonic{IMM("AND"), AddressingMode::IMM, 1}},
            {0x2D, Mnemonic{ABS("AND"), AddressingMode::ABS, 2}},
            {0x3D, Mnemonic{X_IN_ABS("AND"), AddressingMode::X_IN_ABS, 2}},
            {0x39, Mnemonic{Y_IN_ABS("AND"), AddressingMode::Y_IN_ABS, 2}},
            {0x25, Mnemonic{ZP("AND"), AddressingMode::ZP, 1}},
            {0x35, Mnemonic{X_IN_ZP("AND"), AddressingMode::X_IN_ZP, 1}},
            {0x21, Mnemonic{X_IN_ZP_IND("AND"), AddressingMode::X_IN_ZP_IND, 1}},
            {0x31, Mnemonic{ZP_IND_Y_IN("AND"), AddressingMode::ZP_IND_Y_IN, 1}},
            {0x2C, Mnemonic{ABS("BIT"), AddressingMode::ABS, 2}},
            {0x24, Mnemonic{ZP("BIT"), AddressingMode::ZP, 1}},
            {0x49, Mnemonic{IMM("EOR"), AddressingMode::IMM, 1}},
            {0x4D, Mnemonic{ABS("EOR"), AddressingMode::ABS, 2}},
            {0x5D, Mnemonic{X_IN_ABS("EOR"), AddressingMode::X_IN_ABS, 2}},
            {0x59, Mnemonic{Y_IN_ABS("EOR"), AddressingMode::Y_IN_ABS, 2}},
            {0x45, Mnemonic{ZP("EOR"), AddressingMode::ZP, 1}},
            {0x55, Mnemonic{X_IN_ZP("EOR"), AddressingMode::X_IN_ZP, 1}},
            {0x41, Mnemonic{X_IN_ZP_IND("EOR"), AddressingMode::X_IN_ZP_IND, 1}},
            {0x51, Mnemonic{ZP_IND_Y_IN("EOR"), AddressingMode::ZP_IND_Y_IN, 1}},
            {0x09, Mnemonic{IMM("ORA"), AddressingMode::IMM, 1}},
            {0x0D, Mnemonic{ABS("ORA"), AddressingMode::ABS, 2}},
            {0x1D, Mnemonic{X_IN_ABS("ORA"), AddressingMode::X_IN_ABS, 2}},
            {0x19, Mnemonic{Y_IN_ABS("ORA"), AddressingMode::Y_IN_ABS, 2}},
            {0x05, Mnemonic{ZP("ORA"), AddressingMode::ZP, 1}},
            {0x15, Mnemonic{X_IN_ZP("ORA"), AddressingMode::X_IN_ZP, 1}},
            {0x01, Mnemonic{X_IN_ZP_IND("ORA"), AddressingMode::X_IN_ZP_IND, 1}},
            {0x11, Mnemonic{ZP_IND_Y_IN("ORA"), AddressingMode::ZP_IND_Y_IN, 1}},
            {0x69, Mnemonic{IMM("ADC"), AddressingMode::IMM, 1}},
            {0x6D, Mnemonic{ABS("ADC"), AddressingMode::ABS, 2}},
            {0x7D, Mnemonic{X_IN_ABS("ADC"), AddressingMode::X_IN_ABS, 2}},
            {0x79, Mnemonic{Y_IN_ABS("ADC"), AddressingMode::Y_IN_ABS, 2}},
            {0x65, Mnemonic{ZP("ADC"), AddressingMode::ZP, 1}},
            {0x75, Mnemonic{X_IN_ZP("ADC"), AddressingMode::X_IN_ZP, 1}},
            {0x61, Mnemonic{X_IN_ZP_IND("ADC"), AddressingMode::X_IN_ZP_IND, 1}},
            {0x71, Mnemonic{ZP_IND_Y_IN("ADC"), AddressingMode::ZP_IND_Y_IN, 1}},
            {0xC9, Mnemonic{IMM("CMP"), AddressingMode::IMM, 1}},
            {0xCD, Mnemonic{ABS("CMP"), AddressingMode::ABS, 2}},
            {0xDD, Mnemonic{X_IN_ABS("CMP"), AddressingMode::X_IN_ABS, 2}},
            {0xD9, Mnemonic{Y_IN_ABS("CMP"), AddressingMode::Y_IN_ABS, 2}},
            {0xC5, Mnemonic{ZP("CMP"), AddressingMode::ZP, 1}},
            {0xD5, Mnemonic{X_IN_ZP("CMP"), AddressingMode::X_IN_ZP, 1}},
            {0xC1, Mnemonic{X_IN_ZP_IND("CMP"), AddressingMode::X_IN_ZP_IND, 1}},
            {0xD1, Mnemonic{ZP_IND_Y_IN("CMP"), AddressingMode::ZP_IND_Y_IN, 1}},
            {0xE0, Mnemonic{IMM("CPX"), AddressingMode::IMM, 1}},
            {0xEC, Mnemonic{ABS("CPX"), AddressingMode::ABS, 2}},
            {0xE4, Mnemonic{ZP("CPX"), AddressingMode::ZP, 1}},
            {0xC0, Mnemonic{IMM("CPY"), AddressingMode::IMM, 1}},
            {0xCC, Mnemonic{ABS("CPY"), AddressingMode::ABS, 2}},
            {0xC4, Mnemonic{ZP("CPY"), AddressingMode::ZP, 1}},
            {0xE9, Mnemonic{IMM("SBC"), AddressingMode::IMM, 1}},
            {0xED, Mnemonic{ABS("SBC"), AddressingMode::ABS, 2}},
            {0xFD, Mnemonic{X_IN_ABS("SBC"), AddressingMode::X_IN_ABS, 2}},
            {0xF9, Mnemonic{Y_IN_ABS("SBC"), AddressingMode::Y_IN_ABS, 2}},
            {0xE5, Mnemonic{ZP("SBC"), AddressingMode::ZP, 1}},
            {0xF5, Mnemonic{X_IN_ZP("SBC"), AddressingMode::X_IN_ZP, 1}},
            {0xE1, Mnemonic{X_IN_ZP_IND("SBC"), AddressingMode::X_IN_ZP_IND, 1}},
            {0xF1, Mnemonic{ZP_IND_Y_IN("SBC"), AddressingMode::ZP_IND_Y_IN, 1}},
            {0xCE, Mnemonic{ABS("DEC"), AddressingMode::ABS, 2}},
            {0xDE, Mnemonic{X_IN_ABS("DEC"), AddressingMode::X_IN_ABS, 2}},
            {0xC6, Mnemonic{ZP("DEC"), AddressingMode::ZP, 1}},
            {0xD6, Mnemonic{X_IN_ZP("DEC"), AddressingMode::X_IN_ZP, 1}},
            {0xEE, Mnemonic{ABS("INC"), AddressingMode::ABS, 2}},
            {0xFE, Mnemonic{X_IN_ABS("INC"), AddressingMode::X_IN_ABS, 2}},
            {0xE6, Mnemonic{ZP("INC"), AddressingMode::ZP, 1}},
            {0xF6, Mnemonic{X_IN_ZP("INC"), AddressingMode::X_IN_ZP, 1}},
            {0x4C, Mnemonic{ABS("JMP"), AddressingMode::ABS, 2}},
            {0x6C, Mnemonic{"JMP (${})", AddressingMode::ABS_IND, 2}},
            {0x20, Mnemonic{ABS("JSR"), AddressingMode::ABS, 2}},
            {0x90, Mnemonic{REL("BCC"), AddressingMode::REL, 1}},
            {0xB0, Mnemonic{REL("BCS"), AddressingMode::REL, 1}},
            {0xF0, Mnemonic{REL("BEQ"), AddressingMode::REL, 1}},
            {0x30, Mnemonic{REL("BMI"), AddressingMode::REL, 1}},
            {0xD0, Mnemonic{REL("BNE"), AddressingMode::REL, 1}},
            {0x10, Mnemonic{REL("BPL"), AddressingMode::REL, 1}},
            {0x50, Mnemonic{REL("BVC"), AddressingMode::REL, 1}},
            {0x70, Mnemonic{REL("BVS"), AddressingMode::REL, 1}},
    };
}

Mnemonic OpcodeTable::find(uint8_t opcode) const {
    auto found = mOpcodeToMnemonicList.find(opcode);

    if (found != mOpcodeToMnemonicList.end())
        return mOpcodeToMnemonicList.find(opcode)->second;

    return {"UNDEFINED", AddressingMode::REL, 1};
}
